// binary search learning and consolidation: basic framework/break through difficulty/variety and skill
// 0.binary search framework
int binarySearch(int[] nums, int target) {
    int left = 0;
    int right = nums.size() - 1; // search section is [0, N]
    while(left <= right) { // when left equal to right, the right is not avaiable in nums, so it's the terminal condition
        mid = left + (right - left)/2; // in case of additive overflow
        if (nums[mid] == target) {
            return mid;
        } else if (nums[mid] < target) { // narrow search section to [mid+1, right]
            left = mid + 1;
        } else if (nums[mid] > target) { // narrow search section to [left,  mid-1]
            right = mid - 1;
        }
    }
    return -1; // no target finding
}
